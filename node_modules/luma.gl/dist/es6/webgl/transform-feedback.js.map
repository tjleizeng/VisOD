{"version":3,"sources":["../../../src/webgl/transform-feedback.js"],"names":["Resource","Buffer","isWebGL2","assertWebGL2Context","log","isObjectEmpty","TransformFeedback","isSupported","gl","constructor","props","initialize","stubRemovedMethods","Object","seal","buffers","unused","configuration","bindOnUse","bind","_unbindBuffers","setProps","program","setBuffers","bufferName","setBuffer","locationOrName","bufferOrParams","location","_getVaryingIndex","_getBufferParams","buffer","sizeInBytes","offsetInBytes","warn","id","_bindBuffer","begin","primitiveMode","bindTransformFeedback","handle","_bindBuffers","beginTransformFeedback","end","endTransformFeedback","undefined","byteLength","_getVaryingInfo","getVaryingInfo","Number","isFinite","bufferIndex","index","bindBufferBase","bindBufferRange","_createHandle","createTransformFeedback","_deleteHandle","deleteTransformFeedback","_bindHandle"],"mappings":"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","sourcesContent":["import GL from '../constants';\nimport Resource from './resource';\nimport Buffer from './buffer';\nimport {isWebGL2, assertWebGL2Context} from '../webgl-utils';\nimport {log, isObjectEmpty} from '../utils';\n\n// NOTE: The `bindOnUse` flag is a major workaround:\n// See https://github.com/KhronosGroup/WebGL/issues/2346\n\nexport default class TransformFeedback extends Resource {\n  static isSupported(gl) {\n    return isWebGL2(gl);\n  }\n\n  constructor(gl, props = {}) {\n    assertWebGL2Context(gl);\n    super(gl, props);\n\n    this.initialize(props);\n    this.stubRemovedMethods('TransformFeedback', 'v6.0', ['pause', 'resume']);\n    Object.seal(this);\n  }\n\n  initialize(props = {}) {\n    this.buffers = {};\n    this.unused = {};\n    this.configuration = null;\n    this.bindOnUse = true;\n\n    // Unbind any currently bound buffers\n    if (!isObjectEmpty(this.buffers)) {\n      this.bind(() => this._unbindBuffers());\n    }\n\n    this.setProps(props);\n    return this;\n  }\n\n  setProps(props) {\n    if ('program' in props) {\n      this.configuration = props.program && props.program.configuration;\n    }\n    if ('configuration' in props) {\n      this.configuration = props.configuration;\n    }\n    if ('bindOnUse' in props) {\n      props = props.bindOnUse;\n    }\n    if ('buffers' in props) {\n      this.setBuffers(props.buffers);\n    }\n  }\n\n  setBuffers(buffers = {}) {\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n    return this;\n  }\n\n  setBuffer(locationOrName, bufferOrParams) {\n    const location = this._getVaryingIndex(locationOrName);\n    const {buffer, sizeInBytes, offsetInBytes} = this._getBufferParams(bufferOrParams);\n\n    if (location < 0) {\n      this.unused[locationOrName] = buffer;\n      log.warn(() => `${this.id} unused varying buffer ${locationOrName}`)();\n      return this;\n    }\n\n    this.buffers[location] = bufferOrParams;\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, offsetInBytes, sizeInBytes);\n    }\n\n    return this;\n  }\n\n  begin(primitiveMode = GL.POINTS) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    this._bindBuffers();\n    this.gl.beginTransformFeedback(primitiveMode);\n    return this;\n  }\n\n  end() {\n    this.gl.endTransformFeedback();\n    this._unbindBuffers();\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _getBufferParams(bufferOrParams) {\n    let offsetInBytes;\n    let sizeInBytes;\n    let buffer;\n    if (bufferOrParams instanceof Buffer === false) {\n      buffer = bufferOrParams.buffer;\n      sizeInBytes = bufferOrParams.sizeInBytes;\n      offsetInBytes = bufferOrParams.offsetInBytes;\n    } else {\n      buffer = bufferOrParams;\n    }\n    // to use bindBufferRange, either offset or size must be specified, use default value for the other.\n    if (offsetInBytes !== undefined || sizeInBytes !== undefined) {\n      offsetInBytes = offsetInBytes || 0;\n      sizeInBytes = sizeInBytes || buffer.byteLength - offsetInBytes;\n    }\n    return {buffer, offsetInBytes, sizeInBytes};\n  }\n\n  _getVaryingInfo(locationOrName) {\n    return this.configuration && this.configuration.getVaryingInfo(locationOrName);\n  }\n\n  _getVaryingIndex(locationOrName) {\n    if (this.configuration) {\n      return this.configuration.getVaryingInfo(locationOrName).location;\n    }\n    const location = Number(locationOrName);\n    return Number.isFinite(location) ? location : -1;\n  }\n\n  // Need to avoid chrome bug where buffer that is already bound to a different target\n  // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n  _bindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        const {buffer, sizeInBytes, offsetInBytes} = this._getBufferParams(\n          this.buffers[bufferIndex]\n        );\n        this._bindBuffer(bufferIndex, buffer, offsetInBytes, sizeInBytes);\n      }\n    }\n  }\n\n  _unbindBuffers() {\n    if (this.bindOnUse) {\n      for (const bufferIndex in this.buffers) {\n        this._bindBuffer(bufferIndex, null);\n      }\n    }\n  }\n\n  _bindBuffer(index, buffer, offsetInBytes = 0, sizeInBytes) {\n    const handle = buffer && buffer.handle;\n    if (!handle || sizeInBytes === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(\n        GL.TRANSFORM_FEEDBACK_BUFFER,\n        index,\n        handle,\n        offsetInBytes,\n        sizeInBytes\n      );\n    }\n    return this;\n  }\n\n  // RESOURCE METHODS\n\n  _createHandle() {\n    return this.gl.createTransformFeedback();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteTransformFeedback(this.handle);\n  }\n\n  _bindHandle(handle) {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n  }\n}\n"],"file":"transform-feedback.js"}