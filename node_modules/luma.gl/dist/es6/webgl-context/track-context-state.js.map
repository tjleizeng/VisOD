{"version":3,"sources":["../../../src/webgl-context/track-context-state.js"],"names":["setParameters","getParameters","GL_PARAMETER_DEFAULTS","assert","clone","x","Array","isArray","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","update","cap","disable","pixelStorei","pname","param","hint","bindFramebuffer","target","fb","blendColor","r","g","b","a","Float32Array","blendEquation","mode","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","clearDepth","depth","clearStencil","s","colorMask","cullFace","depthFunc","func","depthRange","zNear","zFar","depthMask","mask","frontFace","face","lineWidth","width","polygonOffset","factor","units","sampleCoverage","value","invert","scissor","height","Int32Array","stencilMask","stencilMaskSeparate","stencilFunc","ref","stencilFuncSeparate","stencilOp","fail","zfail","zpass","stencilOpSeparate","viewport","installGetterOverride","gl","functionName","originalGetterFunc","bind","get","params","state","cache","Object","defineProperty","configurable","installSetterSpy","setter","originalSetterFunc","set","_updateCache","valueChanged","oldValue","log","GLState","constructor","copyState","stateStack","assign","seal","push","values","pop","oldValues","key","undefined","trackContextState","global_","global","window","polyfillContext","pushContextState","popContextState"],"mappings":"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","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from '../constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport assert from '../utils/assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n// These \"setters\" map functions to gl parameters\n\nexport const GL_STATE_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, cap) =>\n    update({\n      [cap]: true\n    }),\n  disable: (update, cap) =>\n    update({\n      [cap]: false\n    }),\n  pixelStorei: (update, pname, param) =>\n    update({\n      [pname]: param\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, fb) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: fb,\n          [GL.READ_FRAMEBUFFER_BINDING]: fb\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: fb});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: fb});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n    })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function get(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable\n      ? // Call the getter the params so that it can e.g. serve from a cache\n        gl.state.cache[pname]\n      : // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n        originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-from-cache`,\n    configurable: false\n  });\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function set(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-to-cache`,\n    configurable: false\n  });\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(\n    gl,\n    {\n      copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n      log = () => {} // Logging function, called when gl parameter change calls are actually issued\n    } = {}\n  ) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n        oldValue = this.cache[key];\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    /* global window, global */\n    const global_ = typeof global !== 'undefined' ? global : window;\n    if (global_.polyfillContext) {\n      global_.polyfillContext(gl);\n    }\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"],"file":"track-context-state.js"}