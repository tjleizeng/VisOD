{"version":3,"sources":["../../../src/core/attribute.js"],"names":["Buffer","log","uid","hasFeature","FEATURES","Attribute","constructor","gl","opts","id","type","isIndexed","target","ELEMENT_INDEX_UINT32","value","externalBuffer","buffer","userData","update","Object","seal","_validateAttributeDefinition","delete","constant","accessor","divisor","undefined","assign","setData","data","_setAccessor","getBuffer","getValue","size","offset","stride","normalized","integer","instanced","isInstanced","deprecated"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport GL from '../constants';\nimport {Buffer} from '../webgl';\nimport {log, uid} from '../utils';\nimport {hasFeature, FEATURES} from '../webgl-context/context-features';\n\nexport default class Attribute {\n  constructor(gl, opts = {}) {\n    const {id = uid('attribute'), type, isIndexed = false} = opts;\n\n    // Options that cannot be changed later\n    this.gl = gl;\n    this.id = id;\n    this.isIndexed = isIndexed;\n    this.target = isIndexed ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER;\n    this.type = type;\n\n    if (isIndexed && !type) {\n      // If the attribute is indices, auto infer the correct type\n      // WebGL2 and WebGL1 w/ uint32 index extension support accepts Uint32Array, otherwise Uint16Array\n      this.type =\n        gl && hasFeature(gl, FEATURES.ELEMENT_INDEX_UINT32) ? GL.UNSIGNED_INT : GL.UNSIGNED_SHORT;\n    }\n\n    // Initialize the attribute descriptor, with WebGL and metadata fields\n    this.value = null;\n    this.externalBuffer = null;\n    this.buffer = null;\n    this.userData = {}; // Reserved for application\n    this.update(opts);\n\n    // Sanity - no app fields on our attributes. Use userData instead.\n    Object.seal(this);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeDefinition();\n  }\n\n  delete() {\n    if (this.buffer) {\n      this.buffer.delete();\n      this.buffer = null;\n    }\n  }\n\n  update(opts) {\n    const {value, buffer, constant = this.constant || false} = opts;\n\n    this.constant = constant;\n\n    if (buffer) {\n      this.externalBuffer = buffer;\n      this.constant = false;\n\n      this.type = buffer.accessor.type;\n      if (buffer.accessor.divisor !== undefined) {\n        this.divisor = buffer.accessor.divisor;\n      }\n    } else if (value) {\n      this.externalBuffer = null;\n      this.value = value;\n\n      if (!constant && this.gl) {\n        // Create buffer if needed\n        this.buffer =\n          this.buffer ||\n          new Buffer(\n            this.gl,\n            Object.assign({}, opts, {\n              id: this.id,\n              target: this.target,\n              type: this.type\n            })\n          );\n        this.buffer.setData({data: value});\n        this.type = this.buffer.accessor.type;\n      }\n    }\n\n    this._setAccessor(opts);\n  }\n\n  getBuffer() {\n    if (this.constant) {\n      return null;\n    }\n    return this.externalBuffer || this.buffer;\n  }\n\n  getValue() {\n    if (this.constant) {\n      return this.value;\n    }\n    const buffer = this.externalBuffer || this.buffer;\n    if (buffer) {\n      return [buffer, this];\n    }\n    return null;\n  }\n\n  // Sets all accessor props except type\n  // TODO - store on `this.accessor`\n  _setAccessor(opts) {\n    const {\n      // accessor props\n      size = this.size,\n      offset = this.offset || 0,\n      stride = this.stride || 0,\n      normalized = this.normalized || false,\n      integer = this.integer || false,\n      divisor = this.divisor || 0,\n      instanced,\n      isInstanced\n    } = opts;\n\n    this.size = size;\n    this.offset = offset;\n    this.stride = stride;\n    this.normalized = normalized;\n    this.integer = integer;\n\n    this.divisor = divisor;\n\n    if (isInstanced !== undefined) {\n      log.deprecated('Attribute.isInstanced');\n      this.divisor = isInstanced ? 1 : 0;\n    }\n    if (instanced !== undefined) {\n      log.deprecated('Attribute.instanced');\n      this.divisor = instanced ? 1 : 0;\n    }\n  }\n\n  _validateAttributeDefinition() {\n    // Can be undefined for buffers (auto deduced from shaders)\n    // or larger than 4 for uniform arrays\n    // assert(\n    //   this.size >= 1 && this.size <= 4,\n    //   `Attribute definition for ${this.id} invalid size`\n    // );\n  }\n}\n"],"file":"attribute.js"}