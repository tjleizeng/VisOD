{"version":3,"sources":["../../../src/webgl-context/track-context-state.js"],"names":["clone","x","Array","isArray","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","update","cap","disable","pixelStorei","pname","param","hint","bindFramebuffer","target","fb","blendColor","r","g","b","a","Float32Array","blendEquation","mode","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","clearDepth","depth","clearStencil","s","colorMask","cullFace","depthFunc","func","depthRange","zNear","zFar","depthMask","mask","frontFace","face","lineWidth","width","polygonOffset","factor","units","sampleCoverage","value","invert","scissor","height","Int32Array","stencilMask","stencilMaskSeparate","stencilFunc","ref","stencilFuncSeparate","stencilOp","fail","zfail","zpass","stencilOpSeparate","viewport","installGetterOverride","gl","functionName","originalGetterFunc","bind","get","state","cache","Object","defineProperty","configurable","installSetterSpy","setter","originalSetterFunc","set","params","_updateCache","valueChanged","oldValue","log","GLState","copyState","stateStack","assign","GL_PARAMETER_DEFAULTS","seal","values","push","oldValues","pop","key","undefined","trackContextState","global_","global","window","polyfillContext","pushContextState","popContextState"],"mappings":"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","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from '../constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport assert from '../utils/assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n// These \"setters\" map functions to gl parameters\n\nexport const GL_STATE_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update, cap) =>\n    update({\n      [cap]: true\n    }),\n  disable: (update, cap) =>\n    update({\n      [cap]: false\n    }),\n  pixelStorei: (update, pname, param) =>\n    update({\n      [pname]: param\n    }),\n  hint: (update, pname, hint) =>\n    update({\n      [pname]: hint\n    }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, fb) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: fb,\n          [GL.READ_FRAMEBUFFER_BINDING]: fb\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: fb});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: fb});\n      default:\n        return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update, depth) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update, s) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update, r, g, b, a) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update, zNear, zFar) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update, mask) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n    })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function get(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable\n      ? // Call the getter the params so that it can e.g. serve from a cache\n        gl.state.cache[pname]\n      : // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n        originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-from-cache`,\n    configurable: false\n  });\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function set(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-to-cache`,\n    configurable: false\n  });\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(\n    gl,\n    {\n      copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n      log = () => {} // Logging function, called when gl parameter change calls are actually issued\n    } = {}\n  ) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n        oldValue = this.cache[key];\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    /* global window, global */\n    const global_ = typeof global !== 'undefined' ? global : window;\n    if (global_.polyfillContext) {\n      global_.polyfillContext(gl);\n    }\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"],"file":"track-context-state.js"}