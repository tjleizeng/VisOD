{"version":3,"sources":["../../src/deckgl.js"],"names":["React","createElement","PropTypes","Deck","View","log","extractJSXLayers","inheritsFrom","evaluateChildren","autobind","propTypes","getPropTypes","defaultProps","DeckGL","PureComponent","constructor","props","state","width","height","viewState","initialViewState","children","componentDidMount","DeckClass","deck","Object","assign","canvas","deckCanvas","_getViewState","onViewStateChange","_onViewStateChange","onResize","_onResize","componentWillUnmount","finalize","pickObject","x","y","radius","layerIds","pickMultipleObjects","depth","pickObjects","queryObject","opts","removed","queryVisibleObjects","params","setState","viewId","_updateFromProps","nextProps","viewports","viewport","layers","views","deckProps","setProps","latitude","longitude","zoom","pitch","bearing","_positionChildrenUnderViews","viewManager","length","defaultViewId","id","map","child","i","viewportId","viewChildren","type","getViewport","getViewState","style","position","left","top","key","render","ref","c","push"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport React, {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport {Deck, View, log} from '@deck.gl/core';\nimport extractJSXLayers from './utils/extract-jsx-layers';\nimport {inheritsFrom} from './utils/inherits-from';\nimport evaluateChildren from './utils/evaluate-children';\nimport autobind from './utils/autobind';\n\nconst propTypes = Deck.getPropTypes(PropTypes);\n\nconst defaultProps = Deck.defaultProps;\n\nexport default class DeckGL extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: 0,\n      height: 0,\n      viewState: props.initialViewState\n    };\n    this.children = [];\n    autobind(this);\n  }\n\n  componentDidMount() {\n    // Allows a subclass of Deck to be used\n    // TODO - update propTypes / defaultProps?\n    const DeckClass = this.props.Deck || Deck;\n\n    // DEVTOOLS can cause this to be called twice\n    this.deck =\n      this.deck ||\n      new DeckClass(\n        Object.assign({}, this.props, {\n          initialViewState: null,\n          canvas: this.deckCanvas,\n          viewState: this._getViewState(this.props),\n          // Note: If Deck event handling change size or view state, it calls onResize to update\n          onViewStateChange: this._onViewStateChange,\n          onResize: this._onResize\n        })\n      );\n  }\n\n  componentWillUnmount() {\n    this.deck.finalize();\n  }\n\n  // Public API\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    return this.deck.pickObject({x, y, radius, layerIds});\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    return this.deck.pickMultipleObjects({x, y, radius, layerIds, depth});\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    return this.deck.pickObjects({x, y, width, height, layerIds});\n  }\n\n  queryObject(opts) {\n    log.removed('queryObject', 'pickObject')();\n  }\n\n  queryVisibleObjects(opts) {\n    log.removed('queryVisibleObjects', 'pickObjects')();\n  }\n\n  // Callbacks\n\n  // Forward callback and then call forceUpdate to guarantee that sub components update\n  _onResize(params) {\n    this.setState(params);\n    this.props.onResize(params);\n  }\n\n  // Forward callback and then call forceUpdate to guarantee that sub components update\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.state.viewState) {\n      this.setState({\n        viewState: Object.assign({}, this.state.viewState, {\n          [params.viewId]: viewState\n        })\n      });\n    }\n  }\n\n  // Private Helpers\n\n  // 1. Extract any JSX layers from the react children\n  // 2. Handle any backwards compatiblity props for React layer\n  // Needs to be called both from initial mount, and when new props arrive\n  _updateFromProps(nextProps) {\n    if (!this.deck) {\n      return;\n    }\n\n    if (nextProps.viewports || nextProps.viewport) {\n      log.removed('DeckGL.viewport(s)', 'DeckGL.views')();\n    }\n\n    // extract any deck.gl layers masquerading as react elements from props.children\n    const {layers, views, children} = extractJSXLayers(nextProps);\n\n    const deckProps = Object.assign({}, nextProps, {\n      onViewStateChange: this._onViewStateChange,\n      onResize: this._onResize,\n      layers,\n      views\n    });\n\n    const viewState = this._getViewState(nextProps);\n    if (viewState) {\n      deckProps.viewState = viewState;\n    }\n\n    this.deck.setProps(deckProps);\n\n    this.children = children;\n  }\n\n  // Supports old \"geospatial view state as separate props\" style (React only!)\n  _getViewState(props) {\n    if (!props.viewState && 'latitude' in props && 'longitude' in props && 'zoom' in props) {\n      if ('maxZoom' in props || 'minZoom' in props) {\n        log.removed('maxZoom/minZoom', 'viewState');\n      }\n      const {latitude, longitude, zoom, pitch = 0, bearing = 0} = props;\n      return {latitude, longitude, zoom, pitch, bearing};\n    }\n    return props.viewState || this.state.viewState;\n  }\n\n  // Iterate over views and reposition children associated with views\n  // TODO - Can we supply a similar function for the non-React case?\n  _positionChildrenUnderViews(children) {\n    const {viewManager} = this.deck || {};\n\n    if (!viewManager || !viewManager.views.length) {\n      return [];\n    }\n\n    const defaultViewId = viewManager.views[0].id;\n\n    return children.map((child, i) => {\n      if (child.props.viewportId) {\n        log.removed('viewportId', '<View>')();\n      }\n      if (child.props.viewId) {\n        log.removed('viewId', '<View>')();\n      }\n\n      // Unless child is a View, position / render as part of the default view\n      let viewId = defaultViewId;\n      let viewChildren = child;\n      if (inheritsFrom(child.type, View)) {\n        viewId = child.props.id || defaultViewId;\n        viewChildren = child.props.children;\n      }\n\n      const viewport = viewManager.getViewport(viewId);\n      const viewState = viewManager.getViewState(viewId);\n\n      // Drop (auto-hide) elements with viewId that are not matched by any current view\n      if (!viewport) {\n        return null;\n      }\n\n      // Resolve potentially relative dimensions using the deck.gl container size\n      const {x, y, width, height} = viewport;\n\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      const style = {position: 'absolute', left: x, top: y, width, height};\n      const key = `view-child-${viewId}-${i}`;\n      return createElement('div', {key, id: key, style}, viewChildren);\n    });\n  }\n\n  render() {\n    // TODO - expensive to update on every render?\n    this._updateFromProps(this.props);\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const children = this._positionChildrenUnderViews(this.children);\n\n    // TODO - this styling is enforced for correct positioning with children\n    // It can override the styling set by `Deck`, this should be consolidated.\n    // Note that width and height are handled by deck.gl\n    const style = Object.assign({}, {position: 'absolute', left: 0, top: 0}, this.props.style);\n\n    const canvas = createElement('canvas', {\n      ref: c => (this.deckCanvas = c),\n      key: 'deck-canvas',\n      id: this.props.id,\n      style\n    });\n\n    // Render deck.gl as last child\n    children.push(canvas);\n\n    return createElement('div', {id: 'deckgl-wrapper'}, children);\n  }\n}\n\nDeckGL.propTypes = propTypes;\nDeckGL.defaultProps = defaultProps;\n"],"file":"deckgl.js"}