{"version":3,"sources":["../../../src/lib/deck.js"],"names":["LayerManager","ViewManager","MapView","EffectManager","Effect","log","GL","AnimationLoop","createGLContext","trackContextState","setParameters","Stats","EventManager","assert","EVENTS","noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","constructor","props","Object","assign","viewManager","layerManager","effectManager","stats","_needsRedraw","initialViewState","interactiveState","_onEvent","bind","_onClick","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","setProps","start","finalize","stop","eventManager","destroy","timeStart","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","needsRedraw","clearRedrawFlags","redraw","viewManagerNeedsRedraw","layerManagerNeedsRedraw","getViews","getViewports","rect","pickObject","x","y","radius","layerIds","selectedInfos","viewports","mode","depth","length","pickMultipleObjects","pickObjects","infos","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_updateCanvasSize","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","onCreateContext","opts","onInitialize","onRender","Array","isArray","options","pos","event","offsetCenter","callback","firstInfo","find","info","index","srcEvent","_updateCursor","cursor","_updateAnimationProps","animationProps","context","_setGLContext","enable","copyState","blend","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","_customRender","events","click","pointermove","pointerleave","eventType","on","onInteractiveStateChange","viewport","effect","addEffect","_drawLayers","redrawReason","drawLayers","pass","customRender","Boolean","oneSecondPassed","table","getStatsTable","reset","key","total","updateLayers","bump","params","viewId","eventOptions","type","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","leftButton","rightButton"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport GL from 'luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this._needsRedraw = true;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  needsRedraw({clearRedrawFlags = true} = {}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw({clearRedrawFlags});\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw({clearRedrawFlags});\n    redraw = redraw || viewManagerNeedsRedraw || layerManagerNeedsRedraw;\n    return redraw;\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth: 1\n    });\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.timeStart('deck.pickMultipleObjects');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth\n    });\n    this.stats.timeEnd('deck.pickMultipleObjects');\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layerIds,\n      viewports: this.getViewports({x, y, width, height})\n    });\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  _pickAndCallback(options) {\n    const pos = options.event.offsetCenter;\n    // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n    // assertion error when attempting to unproject the position.\n    if (!pos) {\n      return;\n    }\n\n    const radius = this.props.pickingRadius;\n    const selectedInfos = this.layerManager.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius,\n      viewports: this.getViewports(pos),\n      mode: options.mode,\n      depth: 1,\n      event: options.event\n    });\n    if (options.callback && selectedInfos) {\n      const firstInfo = selectedInfos.find(info => info.index >= 0) || null;\n      // As per documentation, send null value when no valid object is picked.\n      options.callback(firstInfo, selectedInfos, options.event.srcEvent);\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  // Deep integration (Mapbox styles)\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    if (!this.props._customRender) {\n      this.eventManager = new EventManager(gl.canvas, {\n        events: {\n          click: this._onClick,\n          pointermove: this._onPointerMove,\n          pointerleave: this._onPointerLeave\n        }\n      });\n      for (const eventType in EVENTS) {\n        this.eventManager.on(eventType, this._onEvent);\n      }\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      viewports: this.viewManager.getViewports(),\n      views: this.viewManager.getViews(),\n      redrawReason,\n      drawPickingColors: this.props.drawPickingColors, // Debug picking, helps in framebuffered layers\n      customRender: Boolean(this.props._customRender)\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    // Log perf stats every second\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(3, table)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        for (const key in table) {\n          table[key] = table[key].total;\n        }\n        this.props._onMetrics(table);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Check if we need to redraw\n    const redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('redraw');\n    if (this.props._customRender) {\n      this.props._customRender();\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  // Route move events to layers. call the `onHover` prop of any picked layer,\n  // and `onLayerHover` is called directly from here with any picking info generated by `pickLayer`.\n  // @param {Object} event  A mjolnir.js event\n  _onClick(event) {\n    this._pickAndCallback({\n      callback: this.props.onLayerClick,\n      event,\n      mode: 'click'\n    });\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const info = this.layerManager.getLastPickedObject({\n      x: pos.x,\n      y: pos.y,\n      viewports: this.getViewports(pos)\n    });\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._pickAndCallback({\n      callback: this.props.onLayerHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this.layerManager.pickObject({\n      x: -1,\n      y: -1,\n      viewports: [],\n      radius: 1,\n      mode: 'hover'\n    });\n    if (this.props.onLayerHover) {\n      this.props.onLayerHover(null, [], event.srcEvent);\n    }\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}