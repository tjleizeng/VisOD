{"version":3,"sources":["../../../src/lib/layer.js"],"names":["COORDINATE_SYSTEM","AttributeManager","removeLayerInSeer","diffProps","validateProps","count","log","GL","withParameters","assert","projectPosition","getWorldPosition","Component","LayerState","worldToPixels","LOG_PRIORITY_UPDATE","EMPTY_ARRAY","Object","freeze","pickingColorCache","Uint8ClampedArray","defaultProps","data","type","value","async","dataComparator","dataTransform","compare","fetch","url","then","response","json","updateTriggers","numInstances","undefined","visible","pickable","opacity","min","max","onHover","optional","onClick","onDragStart","onDrag","onDragEnd","coordinateSystem","LNGLAT","coordinateOrigin","modelMatrix","wrapLongitude","parameters","uniforms","framebuffer","animation","getPolygonOffset","layerIndex","highlightedObjectIndex","autoHighlight","highlightColor","Layer","toString","className","constructor","layerName","name","props","id","setState","updateObject","setChangeFlags","stateChanged","assign","state","setNeedsRedraw","redraw","internalState","needsRedraw","setLayerNeedsUpdate","context","layerManager","setNeedsUpdate","String","getNeedsRedraw","clearRedrawFlags","_getNeedsRedraw","needsUpdate","shouldUpdateState","_getUpdateParams","isPickable","getModels","models","model","getSingleModel","getAttributeManager","attributeManager","getCurrentLayer","layer","getFirstObject","object","project","xyz","viewport","worldPosition","pixelProjectionMatrix","x","y","z","length","unproject","xy","Array","isArray","projectFlat","lngLat","deprecated","unprojectFlat","use64bitProjection","fp64","LNGLAT_DEPRECATED","once","use64bitPositions","screenToDevicePixels","screenPixels","devicePixelRatio","window","info","pickingEvent","nullPickingColor","encodePickingColor","i","target","decodePickingColor","color","Uint8Array","i1","i2","i3","index","initializeState","Error","oldProps","changeFlags","propsOrDataChanged","updateState","dataChanged","invalidateAll","finalizeState","delete","finalize","draw","opts","getPickingInfo","mode","invalidateAttribute","diffReason","invalidate","updateAttributes","getNumInstances","update","transitions","buffers","ignoreUnknownAttributes","changedAttributes","getChangedAttributes","clearChangedFlags","setAttributes","updateTransition","calculateInstancePickingColors","attribute","size","cacheSize","newPickingColorCache","set","pickingColor","subarray","_clearInstancePickingColor","instancePickingColors","attributes","_clearPickingColor","pickingColors","clearPickingColor","copyPickingColors","colors","restorePickingColors","_initialize","_initState","propsChanged","viewportChanged","_updateState","program","geometry","_update","stateNeedsUpdate","updateParams","gl","error","isComposite","_renderLayers","_updateBaseUniforms","setInstanceCount","clearChangeFlags","resetOldProps","_finalize","drawLayer","moduleParameters","picking_uActive","setModuleParameters","animationProps","_setAnimationProps","offsets","polygonOffset","pickLayer","getChangeFlags","flags","updateTriggersChanged","keys","join","somethingChanged","printChangeFlags","newProps","key","_activeUpdateTrigger","updateModuleSettings","getOldProps","attributeManagerNeedsRedraw","_getAttributeManager","stats","addInstanced","UNSIGNED_BYTE","onAsyncPropUpdated","_onAsyncPropUpdated","bind","setAsyncProps","_transferState","oldLayer","component","userData","propName","Math","pow","setUniforms","uniformMap","is64bitEnabled"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\n/* global fetch */\n/* global window */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute-manager';\nimport {removeLayerInSeer} from './seer-integration';\nimport {diffProps, validateProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport GL from 'luma.gl/constants';\nimport {withParameters} from 'luma.gl';\nimport assert from '../utils/assert';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from 'viewport-mercator-project';\n\nconst LOG_PRIORITY_UPDATE = 1;\n\nconst EMPTY_ARRAY = Object.freeze([]);\n\nlet pickingColorCache = new Uint8ClampedArray(0);\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  dataTransform: {type: 'function', value: data => data, compare: false},\n  fetch: {\n    type: 'function',\n    value: url => fetch(url).then(response => response.json()),\n    compare: false\n  },\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n  numInstances: undefined,\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 0.8},\n\n  onHover: {type: 'function', value: null, compare: false, optional: true},\n  onClick: {type: 'function', value: null, compare: false, optional: true},\n  onDragStart: {type: 'function', value: null, compare: false, optional: true},\n  onDrag: {type: 'function', value: null, compare: false, optional: true},\n  onDragEnd: {type: 'function', value: null, compare: false, optional: true},\n\n  coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\n  coordinateOrigin: {type: 'array', value: [0, 0, 0], compare: true},\n  modelMatrix: {type: 'array', value: null, compare: true, optional: true},\n  wrapLongitude: false,\n\n  parameters: {},\n  uniforms: {},\n  framebuffer: null,\n\n  animation: null, // Passed prop animation functions to evaluate props\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: {\n    type: 'function',\n    value: ({layerIndex}) => [0, -layerIndex * 100],\n    compare: false\n  },\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: {type: 'color', value: [0, 0, 128, 128]}\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  // TODO - Need to align with existing needsUpdate before uncommenting\n  // For now async props will call layerManager directly\n  setLayerNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw({clearRedrawFlags = false} = {}) {\n    return this._getNeedsRedraw(clearRedrawFlags);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return this.shouldUpdateState(this._getUpdateParams());\n    // End lifecycle method\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  // TODO - Gradually phase out, does not support multi model layers\n  getSingleModel() {\n    return this.state && this.state.model;\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Use iteration (the only required capability on data) to get first element\n  // deprecated since we are effectively only supporting Arrays\n  getFirstObject() {\n    const {data} = this.props;\n    for (const object of data) {\n      return object;\n    }\n    return null;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    assert(Array.isArray(xyz));\n\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  // DEPRECATE: This does not handle offset modes\n  projectFlat(lngLat) {\n    log.deprecated('layer.projectFlat', 'layer.projectPosition')();\n    const {viewport} = this.context;\n    assert(Array.isArray(lngLat));\n    return viewport.projectFlat(lngLat);\n  }\n\n  // DEPRECATE: This is not meaningful in offset modes\n  unprojectFlat(xy) {\n    log.deprecated('layer.unprojectFlat')();\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unprojectFlat(xy);\n  }\n\n  use64bitProjection() {\n    if (this.props.fp64) {\n      if (this.props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT_DEPRECATED) {\n        return true;\n      }\n      log.once(\n        0,\n        `Legacy 64-bit mode only works with coordinateSystem set to\n        COORDINATE_SYSTEM.LNGLAT_DEPRECATED. Rendering in 32-bit mode instead`\n      )();\n    }\n\n    return false;\n  }\n\n  use64bitPositions() {\n    return this.props.fp64 || this.props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT;\n  }\n\n  // TODO - needs to refer to context for devicePixels setting\n  screenToDevicePixels(screenPixels) {\n    log.deprecated('screenToDevicePixels', 'DeckGL prop useDevicePixels for conversion')();\n    const devicePixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n    return screenPixels * devicePixelRatio;\n  }\n\n  // Event handling\n  onHover(info) {\n    if (this.props.onHover) {\n      return this.props.onHover(info, this.context.pickingEvent);\n    }\n    return false;\n  }\n\n  onClick(info) {\n    if (this.props.onClick) {\n      return this.props.onClick(info, this.context.pickingEvent);\n    }\n    return false;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i, target = []) {\n    assert(i < 16777215, 'index out of picking color range');\n    target[0] = (i + 1) & 255;\n    target[1] = ((i + 1) >> 8) & 255;\n    target[2] = (((i + 1) >> 8) >> 8) & 255;\n    return target;\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      attributeManager.invalidateAll();\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      log.log(LOG_PRIORITY_UPDATE, `updateTriggers invalidating all attributes: ${diffReason}`)();\n      attributeManager.invalidateAll();\n    } else {\n      log.log(\n        LOG_PRIORITY_UPDATE,\n        `updateTriggers invalidating attribute ${name}: ${diffReason}`\n      )();\n      attributeManager.invalidate(name);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      props,\n      transitions: props.transitions,\n      buffers: props,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const model = this.getSingleModel();\n    if (model) {\n      const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n      model.setAttributes(changedAttributes);\n    }\n  }\n\n  // Update attribute transition\n  updateTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances}) {\n    const {value, size} = attribute;\n\n    if (value[0] === 1) {\n      // This can happen when data has changed, but the attribute value typed array\n      // has sufficient size and does not need to be re-allocated.\n      // This attribute is already populated, we do not have to recalculate it\n      return;\n    }\n\n    // calculateInstancePickingColors always generates the same sequence.\n    // pickingColorCache saves the largest generated sequence for reuse\n    const cacheSize = pickingColorCache.length / size;\n\n    if (cacheSize < numInstances) {\n      // If the attribute is larger than the cache, resize the cache and populate the missing chunk\n      const newPickingColorCache = new Uint8ClampedArray(numInstances * size);\n      newPickingColorCache.set(pickingColorCache);\n      const pickingColor = [];\n\n      for (let i = cacheSize; i < numInstances; i++) {\n        this.encodePickingColor(i, pickingColor);\n        newPickingColorCache[i * size + 0] = pickingColor[0];\n        newPickingColorCache[i * size + 1] = pickingColor[1];\n        newPickingColorCache[i * size + 2] = pickingColor[2];\n      }\n\n      pickingColorCache = newPickingColorCache;\n    }\n\n    // Copy the last calculated picking color sequence into the attribute\n    value.set(\n      numInstances < cacheSize\n        ? pickingColorCache.subarray(0, numInstances * size)\n        : pickingColorCache\n    );\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  _clearInstancePickingColor(color) {\n    const {instancePickingColors} = this.getAttributeManager().attributes;\n    const {value, size} = instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    value[i * size + 0] = 0;\n    value[i * size + 1] = 0;\n    value[i * size + 2] = 0;\n\n    // TODO: Optimize this to use sub-buffer update!\n    instancePickingColors.update({value});\n  }\n\n  // Sets all occurrences of the specified picking color to null picking color. Used for multi picking.\n  _clearPickingColor(color) {\n    const {pickingColors} = this.getAttributeManager().attributes;\n    const {value} = pickingColors;\n\n    for (let i = 0; i < value.length; i += 3) {\n      if (value[i + 0] === color[0] && value[i + 1] === color[1] && value[i + 2] === color[2]) {\n        value[i + 0] = 0;\n        value[i + 1] = 0;\n        value[i + 2] = 0;\n      }\n    }\n\n    // TODO: Optimize this to use sub-buffer update!\n    pickingColors.update({value});\n  }\n\n  // This method figures out if we use instance colors or not\n  // and calls _clearInstancePickingColor or _clearPickingColor\n  clearPickingColor(color) {\n    if (this.getAttributeManager().attributes.pickingColors) {\n      this._clearPickingColor(color);\n    } else {\n      this._clearInstancePickingColor(color);\n    }\n  }\n\n  copyPickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    return new Uint8ClampedArray(colors.value);\n  }\n\n  restorePickingColors(value) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    colors.update({value});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Second check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    const {data} = this.props;\n    return count(data);\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // End subclass lifecycle methods\n\n    // TODO deprecated, for backwards compatibility with older layers\n    // in case layer resets state\n    this.state.attributeManager = this.getAttributeManager();\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({dataChanged: true, propsChanged: true, viewportChanged: true});\n\n    this._updateState();\n\n    const model = this.getSingleModel();\n    if (model) {\n      model.id = this.props.id;\n      model.program.id = `${this.props.id}-program`;\n      model.geometry.id = `${this.props.id}-geometry`;\n    }\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const updateParams = this._getUpdateParams();\n\n    // Safely call subclass lifecycle methods\n    if (this.context.gl) {\n      this.updateState(updateParams);\n    } else {\n      try {\n        this.updateState(updateParams);\n      } catch (error) {\n        // ignore error if gl context is missing\n      }\n    }\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this.updateAttributes(this.props);\n      this._updateBaseUniforms();\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    this.clearChangeFlags();\n    this.internalState.resetOldProps();\n  }\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // End lifecycle method\n    removeLayerInSeer(this.id);\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    if (!uniforms.picking_uActive) {\n      this.updateTransition();\n    }\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Hack/ib - define a public luma function\n    const {animationProps} = this.context;\n    if (animationProps) {\n      for (const model of this.getModels()) {\n        model._setAnimationProps(animationProps);\n      }\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n    parameters.polygonOffset = offsets;\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      this.draw({moduleParameters, uniforms, parameters, context: this.context});\n    });\n    // End lifecycle method\n  }\n\n  // {uniforms = {}, ...opts}\n  pickLayer(opts) {\n    // Call subclass lifecycle method\n    return this.getPickingInfo(opts);\n    // End lifecycle method\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    this.internalState.changeFlags = this.internalState.changeFlags || {};\n    const changeFlags = this.internalState.changeFlags;\n\n    // Update primary flags\n    if (flags.dataChanged && !changeFlags.dataChanged) {\n      changeFlags.dataChanged = flags.dataChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `dataChanged: ${flags.dataChanged} in ${this.id}`)();\n    }\n    if (flags.updateTriggersChanged && !changeFlags.updateTriggersChanged) {\n      changeFlags.updateTriggersChanged =\n        changeFlags.updateTriggersChanged && flags.updateTriggersChanged\n          ? Object.assign({}, flags.updateTriggersChanged, changeFlags.updateTriggersChanged)\n          : flags.updateTriggersChanged || changeFlags.updateTriggersChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 1,\n        () =>\n          'updateTriggersChanged: ' +\n          `${Object.keys(flags.updateTriggersChanged).join(', ')} in ${this.id}`\n      )();\n    }\n    if (flags.propsChanged && !changeFlags.propsChanged) {\n      changeFlags.propsChanged = flags.propsChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `propsChanged: ${flags.propsChanged} in ${this.id}`)();\n    }\n    if (flags.viewportChanged && !changeFlags.viewportChanged) {\n      changeFlags.viewportChanged = flags.viewportChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 2,\n        () => `viewportChanged: ${flags.viewportChanged} in ${this.id}`\n      )();\n    }\n    if (flags.stateChanged && !changeFlags.stateChanged) {\n      changeFlags.stateChanged = flags.stateChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `stateChanged: ${flags.stateChanged} in ${this.id}`)();\n    }\n\n    // Update composite flags\n    const propsOrDataChanged =\n      flags.dataChanged || flags.updateTriggersChanged || flags.propsChanged;\n    changeFlags.propsOrDataChanged = changeFlags.propsOrDataChanged || propsOrDataChanged;\n    changeFlags.somethingChanged =\n      changeFlags.somethingChanged ||\n      propsOrDataChanged ||\n      flags.viewportChanged ||\n      flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  printChangeFlags() {\n    const flags = this.internalState.changeFlags;\n    return `\\\n${flags.dataChanged ? 'data ' : ''}\\\n${flags.propsChanged ? 'props ' : ''}\\\n${flags.updateTriggersChanged ? 'triggers ' : ''}\\\n${flags.viewportChanged ? 'viewport' : ''}\\\n`;\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this._activeUpdateTrigger(key);\n        }\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  // Called by layer manager to validate props (in development)\n  validateProps() {\n    validateProps(this.props);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(clearRedrawFlags) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw =\n      attributeManager && attributeManager.getNeedsRedraw({clearRedrawFlags});\n    redraw = redraw || attributeManagerNeedsRedraw;\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n\n    this.state = {};\n    // TODO deprecated, for backwards compatibility with older layers\n    this.state.attributeManager = attributeManager;\n\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.component = this;\n\n    // Move state\n    this.state = state;\n    // Deprecated: layer references on `state`\n    state.layer = this;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    // Update model layer reference\n    for (const model of this.getModels()) {\n      model.userData.layer = this;\n    }\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setLayerNeedsUpdate();\n  }\n\n  // Operate on each changed triggers, will be called when an updateTrigger changes\n  _activeUpdateTrigger(propName) {\n    this.invalidateAttribute(propName);\n  }\n\n  _updateBaseUniforms() {\n    const uniforms = {\n      // apply gamma to opacity to make it visually \"linear\"\n      opacity:\n        typeof this.props.opacity === 'function'\n          ? animationProps => Math.pow(this.props.opacity(animationProps), 1 / 2.2)\n          : Math.pow(this.props.opacity, 1 / 2.2)\n    };\n    for (const model of this.getModels()) {\n      model.setUniforms(uniforms);\n    }\n  }\n\n  // DEPRECATED METHODS\n\n  // Updates selected state members and marks the object for redraw\n  setUniforms(uniformMap) {\n    for (const model of this.getModels()) {\n      model.setUniforms(uniformMap);\n    }\n\n    // TODO - set needsRedraw on the model(s)?\n    this.setNeedsRedraw();\n    log.deprecated('layer.setUniforms', 'model.setUniforms')();\n  }\n\n  is64bitEnabled() {\n    log.deprecated('is64bitEnabled', 'use64bitProjection')();\n    return this.use64bitProjection();\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n"],"file":"layer.js"}