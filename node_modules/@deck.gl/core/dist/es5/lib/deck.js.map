{"version":3,"sources":["../../../src/lib/deck.js"],"names":["noop","getCursor","isDragging","getPropTypes","PropTypes","id","string","width","oneOfType","number","height","layers","object","array","layerFilter","func","views","viewState","effects","arrayOf","instanceOf","Effect","controller","bool","gl","glOptions","parameters","pickingRadius","useDevicePixels","onWebGLInitialized","onResize","onViewStateChange","onBeforeRender","onAfterRender","onLayerClick","onLayerHover","onLoad","debug","drawPickingColors","_animate","defaultProps","_onMetrics","Deck","props","Object","assign","viewManager","layerManager","effectManager","stats","Stats","_needsRedraw","initialViewState","interactiveState","_onEvent","bind","_onClick","_onPointerMove","_onPointerLeave","_pickAndCallback","_onRendererInitialized","_onRenderFrame","_onViewStateChange","_onInteractiveStateChange","document","canvas","_createCanvas","animationLoop","_createAnimationLoop","setProps","start","stop","finalize","eventManager","destroy","timeStart","_setCanvasSize","newProps","_getViews","_getViewState","timeEnd","clearRedrawFlags","redraw","viewManagerNeedsRedraw","needsRedraw","layerManagerNeedsRedraw","rect","getViewports","x","y","radius","layerIds","selectedInfos","pickObject","viewports","mode","depth","length","infos","pickObjects","getElementById","createElement","parent","body","appendChild","style","Number","isFinite","position","_checkForCanvasSizeChange","newWidth","clientWidth","newHeight","clientHeight","autoResizeDrawingBuffer","AnimationLoop","onCreateContext","opts","onInitialize","onRender","MapView","Array","isArray","options","pos","event","offsetCenter","callback","firstInfo","find","info","index","srcEvent","cursor","animationProps","context","enable","copyState","blend","blendFunc","GL","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","polygonOffsetFill","depthTest","depthFunc","LEQUAL","_customRender","EventManager","events","click","pointermove","pointerleave","eventType","EVENTS","on","ViewManager","onInteractiveStateChange","viewport","LayerManager","EffectManager","effect","addEffect","_updateCanvasSize","redrawReason","drawLayers","pass","getViews","customRender","Boolean","_setGLContext","oneSecondPassed","table","getStatsTable","reset","log","key","total","_updateCursor","updateLayers","bump","_updateAnimationProps","_drawLayers","params","viewId","eventOptions","type","getLastPickedObject","layer","layerHandler","handler","rootHandler","handled","call","leftButton","rightButton"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport LayerManager from './layer-manager';\nimport ViewManager from './view-manager';\nimport MapView from '../views/map-view';\nimport EffectManager from '../experimental/lib/effect-manager';\nimport Effect from '../experimental/lib/effect';\nimport log from '../utils/log';\n\nimport GL from 'luma.gl/constants';\nimport {AnimationLoop, createGLContext, trackContextState, setParameters} from 'luma.gl';\nimport {Stats} from 'probe.gl';\nimport {EventManager} from 'mjolnir.js';\n\nimport assert from '../utils/assert';\nimport {EVENTS} from './constants';\n/* global document */\n\nfunction noop() {}\n\nconst getCursor = ({isDragging}) => (isDragging ? 'grabbing' : 'grab');\n\nfunction getPropTypes(PropTypes) {\n  // Note: Arrays (layers, views, ) can contain falsy values\n  return {\n    id: PropTypes.string,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n    // layer/view/controller settings\n    layers: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    layerFilter: PropTypes.func,\n    views: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    viewState: PropTypes.object,\n    effects: PropTypes.arrayOf(PropTypes.instanceOf(Effect)),\n    controller: PropTypes.oneOfType([PropTypes.func, PropTypes.bool, PropTypes.object]),\n\n    // GL settings\n    gl: PropTypes.object,\n    glOptions: PropTypes.object,\n    parameters: PropTypes.object,\n    pickingRadius: PropTypes.number,\n    useDevicePixels: PropTypes.bool,\n\n    // Callbacks\n    onWebGLInitialized: PropTypes.func,\n    onResize: PropTypes.func,\n    onViewStateChange: PropTypes.func,\n    onBeforeRender: PropTypes.func,\n    onAfterRender: PropTypes.func,\n    onLayerClick: PropTypes.func,\n    onLayerHover: PropTypes.func,\n    onLoad: PropTypes.func,\n\n    // Debug settings\n    debug: PropTypes.bool,\n    drawPickingColors: PropTypes.bool,\n\n    // Experimental props\n\n    // Forces a redraw every animation frame\n    _animate: PropTypes.bool\n  };\n}\n\nconst defaultProps = {\n  id: 'deckgl-overlay',\n  width: '100%',\n  height: '100%',\n\n  pickingRadius: 0,\n  layerFilter: null,\n  glOptions: {},\n  gl: null,\n  layers: [],\n  effects: [],\n  views: null,\n  controller: null, // Rely on external controller, e.g. react-map-gl\n  useDevicePixels: true,\n  _animate: false,\n\n  onWebGLInitialized: noop,\n  onResize: noop,\n  onViewStateChange: noop,\n  onBeforeRender: noop,\n  onAfterRender: noop,\n  onLayerClick: null,\n  onLayerHover: null,\n  onLoad: noop,\n  _onMetrics: null,\n\n  getCursor,\n\n  debug: false,\n  drawPickingColors: false\n};\n\nexport default class Deck {\n  constructor(props) {\n    props = Object.assign({}, defaultProps, props);\n\n    this.width = 0; // \"read-only\", auto-updated from canvas\n    this.height = 0; // \"read-only\", auto-updated from canvas\n\n    // Maps view descriptors to vieports, rebuilds when width/height/viewState/views change\n    this.viewManager = null;\n    this.layerManager = null;\n    this.effectManager = null;\n\n    this.stats = new Stats({id: 'deck.gl'});\n\n    this._needsRedraw = true;\n\n    this.viewState = props.initialViewState || null; // Internal view state if no callback is supplied\n    this.interactiveState = {\n      isDragging: false // Whether the cursor is down\n    };\n\n    // Bind methods\n    this._onEvent = this._onEvent.bind(this);\n    this._onClick = this._onClick.bind(this);\n    this._onPointerMove = this._onPointerMove.bind(this);\n    this._onPointerLeave = this._onPointerLeave.bind(this);\n    this._pickAndCallback = this._pickAndCallback.bind(this);\n    this._onRendererInitialized = this._onRendererInitialized.bind(this);\n    this._onRenderFrame = this._onRenderFrame.bind(this);\n    this._onViewStateChange = this._onViewStateChange.bind(this);\n    this._onInteractiveStateChange = this._onInteractiveStateChange.bind(this);\n\n    if (!props.gl) {\n      // Note: LayerManager creation deferred until gl context available\n      if (typeof document !== 'undefined') {\n        this.canvas = this._createCanvas(props);\n      }\n    }\n    this.animationLoop = this._createAnimationLoop(props);\n\n    this.setProps(props);\n\n    this.animationLoop.start();\n  }\n\n  finalize() {\n    this.animationLoop.stop();\n    this.animationLoop = null;\n\n    if (this.layerManager) {\n      this.layerManager.finalize();\n      this.layerManager = null;\n    }\n\n    if (this.viewManager) {\n      this.viewManager.finalize();\n      this.viewManager = null;\n    }\n\n    if (this.eventManager) {\n      this.eventManager.destroy();\n    }\n  }\n\n  setProps(props) {\n    this.stats.timeStart('deck.setProps');\n    props = Object.assign({}, this.props, props);\n    this.props = props;\n\n    // Update CSS size of canvas\n    this._setCanvasSize(props);\n\n    // We need to overwrite CSS style width and height with actual, numeric values\n    const newProps = Object.assign({}, props, {\n      views: this._getViews(props),\n      width: this.width,\n      height: this.height\n    });\n\n    const viewState = this._getViewState(props);\n    if (viewState) {\n      newProps.viewState = viewState;\n    }\n\n    // Update view manager props\n    if (this.viewManager) {\n      this.viewManager.setProps(newProps);\n    }\n\n    // Update layer manager props (but not size)\n    if (this.layerManager) {\n      this.layerManager.setProps(newProps);\n    }\n\n    // Update animation loop\n    if (this.animationLoop) {\n      this.animationLoop.setProps(newProps);\n    }\n\n    this.stats.timeEnd('deck.setProps');\n  }\n\n  // Public API\n\n  // Check if a redraw is needed\n  // Returns `false` or a string summarizing the redraw reason\n  needsRedraw({clearRedrawFlags = true} = {}) {\n    if (this.props._animate) {\n      return 'Deck._animate';\n    }\n\n    let redraw = this._needsRedraw;\n\n    if (clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n\n    const viewManagerNeedsRedraw = this.viewManager.needsRedraw({clearRedrawFlags});\n    const layerManagerNeedsRedraw = this.layerManager.needsRedraw({clearRedrawFlags});\n    redraw = redraw || viewManagerNeedsRedraw || layerManagerNeedsRedraw;\n    return redraw;\n  }\n\n  getViews() {\n    return this.viewManager.views;\n  }\n\n  // Get a set of viewports for a given width and height\n  getViewports(rect) {\n    return this.viewManager.getViewports(rect);\n  }\n\n  pickObject({x, y, radius = 0, layerIds = null}) {\n    this.stats.timeStart('deck.pickObject');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth: 1\n    });\n    this.stats.timeEnd('deck.pickObject');\n    return selectedInfos.length ? selectedInfos[0] : null;\n  }\n\n  pickMultipleObjects({x, y, radius = 0, layerIds = null, depth = 10}) {\n    this.stats.timeStart('deck.pickMultipleObjects');\n    const selectedInfos = this.layerManager.pickObject({\n      x,\n      y,\n      radius,\n      layerIds,\n      viewports: this.getViewports({x, y}),\n      mode: 'query',\n      depth\n    });\n    this.stats.timeEnd('deck.pickMultipleObjects');\n    return selectedInfos;\n  }\n\n  pickObjects({x, y, width = 1, height = 1, layerIds = null}) {\n    this.stats.timeStart('deck.pickObjects');\n    const infos = this.layerManager.pickObjects({\n      x,\n      y,\n      width,\n      height,\n      layerIds,\n      viewports: this.getViewports({x, y, width, height})\n    });\n    this.stats.timeEnd('deck.pickObjects');\n    return infos;\n  }\n\n  // Private Methods\n\n  // canvas, either string, canvas or `null`\n  _createCanvas(props) {\n    let canvas = props.canvas;\n\n    // TODO EventManager should accept element id\n    if (typeof canvas === 'string') {\n      /* global document */\n      canvas = document.getElementById(canvas);\n      assert(canvas);\n    }\n\n    if (!canvas) {\n      canvas = document.createElement('canvas');\n      const parent = props.parent || document.body;\n      parent.appendChild(canvas);\n    }\n\n    const {id, style} = props;\n    canvas.id = id;\n    Object.assign(canvas.style, style);\n\n    return canvas;\n  }\n\n  // Updates canvas width and/or height, if provided as props\n  _setCanvasSize(props) {\n    if (!this.canvas) {\n      return;\n    }\n\n    let {width, height} = props;\n    // Set size ONLY if props are being provided, otherwise let canvas be layouted freely\n    if (width || width === 0) {\n      width = Number.isFinite(width) ? `${width}px` : width;\n      this.canvas.style.width = width;\n    }\n    if (height || height === 0) {\n      height = Number.isFinite(height) ? `${height}px` : height;\n      // Note: position==='absolute' required for height 100% to work\n      this.canvas.style.position = 'absolute';\n      this.canvas.style.height = height;\n    }\n  }\n\n  // If canvas size has changed, updates\n  _updateCanvasSize() {\n    if (this._checkForCanvasSizeChange()) {\n      const {width, height} = this;\n      this.viewManager.setProps({width, height});\n      this.props.onResize({width: this.width, height: this.height});\n    }\n  }\n\n  // If canvas size has changed, reads out the new size and returns true\n  _checkForCanvasSizeChange() {\n    const {canvas} = this;\n    if (!canvas) {\n      return false;\n    }\n    // Fallback to width/height when clientWidth/clientHeight are 0 or undefined.\n    const newWidth = canvas.clientWidth || canvas.width;\n    const newHeight = canvas.clientHeight || canvas.height;\n    if (newWidth !== this.width || newHeight !== this.height) {\n      this.width = newWidth;\n      this.height = newHeight;\n      return true;\n    }\n    return false;\n  }\n\n  _createAnimationLoop(props) {\n    const {width, height, gl, glOptions, debug, useDevicePixels, autoResizeDrawingBuffer} = props;\n\n    return new AnimationLoop({\n      width,\n      height,\n      useDevicePixels,\n      autoResizeDrawingBuffer,\n      onCreateContext: opts =>\n        gl || createGLContext(Object.assign({}, glOptions, opts, {canvas: this.canvas, debug})),\n      onInitialize: this._onRendererInitialized,\n      onRender: this._onRenderFrame,\n      onBeforeRender: props.onBeforeRender,\n      onAfterRender: props.onAfterRender\n    });\n  }\n\n  // Get the most relevant view state: props.viewState, if supplied, shadows internal viewState\n  // TODO: For backwards compatibility ensure numeric width and height is added to the viewState\n  _getViewState(props) {\n    return props.viewState || this.viewState;\n  }\n\n  // Get the view descriptor list\n  _getViews(props) {\n    // Default to a full screen map view port\n    let views = props.views || [new MapView({id: 'default-view'})];\n    views = Array.isArray(views) ? views : [views];\n    if (views.length && props.controller) {\n      // Backward compatibility: support controller prop\n      views[0].props.controller = props.controller;\n    }\n    return views;\n  }\n\n  _pickAndCallback(options) {\n    const pos = options.event.offsetCenter;\n    // Do not trigger callbacks when click/hover position is invalid. Doing so will cause a\n    // assertion error when attempting to unproject the position.\n    if (!pos) {\n      return;\n    }\n\n    const radius = this.props.pickingRadius;\n    const selectedInfos = this.layerManager.pickObject({\n      x: pos.x,\n      y: pos.y,\n      radius,\n      viewports: this.getViewports(pos),\n      mode: options.mode,\n      depth: 1,\n      event: options.event\n    });\n    if (options.callback && selectedInfos) {\n      const firstInfo = selectedInfos.find(info => info.index >= 0) || null;\n      // As per documentation, send null value when no valid object is picked.\n      options.callback(firstInfo, selectedInfos, options.event.srcEvent);\n    }\n  }\n\n  _updateCursor() {\n    if (this.canvas) {\n      this.canvas.style.cursor = this.props.getCursor(this.interactiveState);\n    }\n  }\n\n  // Updates animation props on the layer context\n  _updateAnimationProps(animationProps) {\n    this.layerManager.context.animationProps = animationProps;\n  }\n\n  // Deep integration (Mapbox styles)\n\n  _setGLContext(gl) {\n    if (this.layerManager) {\n      return;\n    }\n\n    // if external context...\n    if (!this.canvas) {\n      this.canvas = gl.canvas;\n      trackContextState(gl, {enable: true, copyState: true});\n    }\n\n    setParameters(gl, {\n      blend: true,\n      blendFunc: [GL.SRC_ALPHA, GL.ONE_MINUS_SRC_ALPHA, GL.ONE, GL.ONE_MINUS_SRC_ALPHA],\n      polygonOffsetFill: true,\n      depthTest: true,\n      depthFunc: GL.LEQUAL\n    });\n\n    this.props.onWebGLInitialized(gl);\n\n    if (!this.props._customRender) {\n      this.eventManager = new EventManager(gl.canvas, {\n        events: {\n          click: this._onClick,\n          pointermove: this._onPointerMove,\n          pointerleave: this._onPointerLeave\n        }\n      });\n      for (const eventType in EVENTS) {\n        this.eventManager.on(eventType, this._onEvent);\n      }\n    }\n\n    this.viewManager = new ViewManager({\n      eventManager: this.eventManager,\n      onViewStateChange: this._onViewStateChange,\n      onInteractiveStateChange: this._onInteractiveStateChange,\n      views: this._getViews(this.props),\n      viewState: this._getViewState(this.props),\n      width: this.width,\n      height: this.height\n    });\n\n    // viewManager must be initialized before layerManager\n    // layerManager depends on viewport created by viewManager.\n    assert(this.viewManager);\n    const viewport = this.viewManager.getViewports()[0];\n    // Note: avoid React setState due GL animation loop / setState timing issue\n    this.layerManager = new LayerManager(gl, {\n      stats: this.stats,\n      viewport\n    });\n\n    this.effectManager = new EffectManager({gl, layerManager: this.layerManager});\n\n    for (const effect of this.props.effects) {\n      this.effectManager.addEffect(effect);\n    }\n\n    this.setProps(this.props);\n\n    this._updateCanvasSize();\n    this.props.onLoad();\n  }\n\n  _drawLayers(redrawReason) {\n    const {gl} = this.layerManager.context;\n\n    setParameters(gl, this.props.parameters);\n\n    this.props.onBeforeRender({gl});\n\n    this.layerManager.drawLayers({\n      pass: 'screen',\n      viewports: this.viewManager.getViewports(),\n      views: this.viewManager.getViews(),\n      redrawReason,\n      drawPickingColors: this.props.drawPickingColors, // Debug picking, helps in framebuffered layers\n      customRender: Boolean(this.props._customRender)\n    });\n\n    this.props.onAfterRender({gl});\n  }\n\n  // Callbacks\n\n  _onRendererInitialized({gl}) {\n    this._setGLContext(gl);\n  }\n\n  _onRenderFrame(animationProps) {\n    // Log perf stats every second\n    if (this.stats.oneSecondPassed()) {\n      const table = this.stats.getStatsTable();\n      this.stats.reset();\n      log.table(3, table)();\n\n      // Experimental: report metrics\n      if (this.props._onMetrics) {\n        for (const key in table) {\n          table[key] = table[key].total;\n        }\n        this.props._onMetrics(table);\n      }\n    }\n\n    this._updateCanvasSize();\n\n    this._updateCursor();\n\n    // Update layers if needed (e.g. some async prop has loaded)\n    // Note: This can trigger a redraw\n    this.layerManager.updateLayers();\n\n    this.stats.bump('fps');\n\n    // Needs to be done before drawing\n    this._updateAnimationProps(animationProps);\n\n    // Check if we need to redraw\n    const redrawReason = this.needsRedraw({clearRedrawFlags: true});\n    if (!redrawReason) {\n      return;\n    }\n\n    this.stats.bump('redraw');\n    if (this.props._customRender) {\n      this.props._customRender();\n    } else {\n      this._drawLayers(redrawReason);\n    }\n  }\n\n  // Callbacks\n\n  _onViewStateChange(params) {\n    // Let app know that view state is changing, and give it a chance to change it\n    const viewState = this.props.onViewStateChange(params) || params.viewState;\n\n    // If initialViewState was set on creation, auto track position\n    if (this.viewState) {\n      this.viewState[params.viewId] = viewState;\n      this.viewManager.setProps({viewState});\n    }\n  }\n\n  _onInteractiveStateChange({isDragging = false}) {\n    if (isDragging !== this.interactiveState.isDragging) {\n      this.interactiveState.isDragging = isDragging;\n    }\n  }\n\n  // Route move events to layers. call the `onHover` prop of any picked layer,\n  // and `onLayerHover` is called directly from here with any picking info generated by `pickLayer`.\n  // @param {Object} event  A mjolnir.js event\n  _onClick(event) {\n    this._pickAndCallback({\n      callback: this.props.onLayerClick,\n      event,\n      mode: 'click'\n    });\n  }\n\n  _onEvent(event) {\n    const eventOptions = EVENTS[event.type];\n    const pos = event.offsetCenter;\n\n    if (!eventOptions || !pos) {\n      return;\n    }\n\n    // Reuse last picked object\n    const info = this.layerManager.getLastPickedObject({\n      x: pos.x,\n      y: pos.y,\n      viewports: this.getViewports(pos)\n    });\n\n    const {layer} = info;\n    const layerHandler =\n      layer && (layer[eventOptions.handler] || layer.props[eventOptions.handler]);\n    const rootHandler = this.props[eventOptions.handler];\n    let handled = false;\n\n    if (layerHandler) {\n      handled = layerHandler.call(layer, info, event);\n    }\n    if (!handled && rootHandler) {\n      rootHandler(info, event);\n    }\n  }\n\n  _onPointerMove(event) {\n    if (event.leftButton || event.rightButton) {\n      // Do not trigger onHover callbacks if mouse button is down.\n      return;\n    }\n    this._pickAndCallback({\n      callback: this.props.onLayerHover,\n      event,\n      mode: 'hover'\n    });\n  }\n\n  _onPointerLeave(event) {\n    this.layerManager.pickObject({\n      x: -1,\n      y: -1,\n      viewports: [],\n      radius: 1,\n      mode: 'hover'\n    });\n    if (this.props.onLayerHover) {\n      this.props.onLayerHover(null, [], event.srcEvent);\n    }\n  }\n}\n\nDeck.getPropTypes = getPropTypes;\nDeck.defaultProps = defaultProps;\n"],"file":"deck.js"}