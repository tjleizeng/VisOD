{"version":3,"sources":["../../../src/scatterplot-layer/scatterplot-layer.js"],"names":["Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","fs","DEFAULT_COLOR","defaultProps","radiusScale","type","min","value","radiusMinPixels","radiusMaxPixels","Number","MAX_SAFE_INTEGER","lineWidthScale","lineWidthMinPixels","lineWidthMaxPixels","stroked","filled","getPosition","x","position","getRadius","getFillColor","getLineColor","getLineWidth","strokeWidth","deprecatedFor","outline","getColor","ScatterplotLayer","id","projectModule","use64bitProjection","modules","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","instancePositions64xyLow","update","calculateInstancePositions64xyLow","instanceRadius","defaultValue","instanceFillColors","UNSIGNED_BYTE","instanceLineColors","instanceLineWidths","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","uniforms","render","Object","assign","positions","getShaders","geometry","drawMode","TRIANGLE_FAN","attributes","Float32Array","isInstanced","shaderCache","attribute","isFP64","use64bitPositions","constant","data","i","point","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './scatterplot-layer-vertex.glsl';\nimport fs from './scatterplot-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  radiusScale: {type: 'number', min: 0, value: 1},\n  radiusMinPixels: {type: 'number', min: 0, value: 0}, //  min point radius in pixels\n  radiusMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max point radius in pixels\n  lineWidthScale: {type: 'number', min: 0, value: 1},\n  lineWidthMinPixels: {type: 'number', min: 0, value: 0},\n  lineWidthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER},\n  stroked: false,\n  fp64: false,\n  filled: true,\n\n  getPosition: {type: 'accessor', value: x => x.position},\n  getRadius: {type: 'accessor', value: 1},\n  getFillColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getLineWidth: {type: 'accessor', value: 1},\n\n  // deprecated\n  strokeWidth: {deprecatedFor: 'getLineWidth'},\n  outline: {deprecatedFor: 'stroked'},\n  getColor: {deprecatedFor: ['getFillColor', 'getLineColor']}\n};\n\nexport default class ScatterplotLayer extends Layer {\n  getShaders(id) {\n    const projectModule = this.use64bitProjection() ? 'project64' : 'project32';\n    return {vs, fs, modules: [projectModule, 'picking']};\n  }\n\n  initializeState() {\n    this.getAttributeManager().addInstanced({\n      instancePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getPosition'\n      },\n      instancePositions64xyLow: {\n        size: 2,\n        accessor: 'getPosition',\n        update: this.calculateInstancePositions64xyLow\n      },\n      instanceRadius: {\n        size: 1,\n        transition: true,\n        accessor: 'getRadius',\n        defaultValue: 1\n      },\n      instanceFillColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getFillColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineColors: {\n        size: 4,\n        transition: true,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getLineColor',\n        defaultValue: [0, 0, 0, 255]\n      },\n      instanceLineWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getLineWidth',\n        defaultValue: 1\n      }\n    });\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      radiusScale,\n      radiusMinPixels,\n      radiusMaxPixels,\n      stroked,\n      filled,\n      lineWidthScale,\n      lineWidthMinPixels,\n      lineWidthMaxPixels\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        stroked: stroked ? 1 : 0,\n        filled,\n        radiusScale,\n        radiusMinPixels,\n        radiusMaxPixels,\n        lineWidthScale,\n        lineWidthMinPixels,\n        lineWidthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    // a square that minimally cover the unit circle\n    const positions = [-1, -1, 0, -1, 1, 0, 1, 1, 0, 1, -1, 0];\n\n    return new Model(\n      gl,\n      Object.assign(this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_FAN,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateInstancePositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(2);\n      return;\n    }\n\n    const {data, getPosition} = this.props;\n    const {value} = attribute;\n    let i = 0;\n    for (const point of data) {\n      const position = getPosition(point);\n      value[i++] = fp64LowPart(position[0]);\n      value[i++] = fp64LowPart(position[1]);\n    }\n  }\n}\n\nScatterplotLayer.layerName = 'ScatterplotLayer';\nScatterplotLayer.defaultProps = defaultProps;\n"],"file":"scatterplot-layer.js"}