{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","log","MultiIconLayer","makeFontAtlas","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SETTINGS","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","MISSING_CHAR_WIDTH","FONT_SETTINGS_PROPS","defaultProps","fp64","sizeScale","characterSet","fontFamily","fontWeight","fontSettings","getText","type","value","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","gl","context","mergedFontSettings","Object","assign","scale","mapping","texture","setState","iconAtlas","iconMapping","oldFontSettings","some","prop","info","object","index","data","state","transformedData","objectIndex","val","letters","Array","from","offsets","offsetLeft","forEach","letter","i","datum","len","length","frame","width","warn","push","accessor","textAnchor","hasOwnProperty","Error","alignmentBaseline","sdf","transitions","updateTriggers","SubLayerClass","getSubLayerClass","d","_getAccessor","getAnchorX","getAnchorXFromTextAnchor","getAnchorY","getAnchorYFromAlignmentBaseline","getSubLayerProps","id","getIcon","getShiftInQueue","getLetterOffset","getLengthOfQueue","getTextLength","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport {\n  makeFontAtlas,\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SETTINGS\n} from './font-atlas';\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  fp64: false,\n  sizeScale: 1,\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  fontSettings: {},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n    if (fontChanged) {\n      this.updateFontAtlas();\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  updateFontAtlas() {\n    const {gl} = this.context;\n    const {fontSettings, fontFamily, fontWeight, characterSet} = this.props;\n\n    const mergedFontSettings = Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n      fontFamily,\n      fontWeight,\n      characterSet\n    });\n    const {scale, mapping, texture} = makeFontAtlas(gl, mergedFontSettings);\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n\n    const transformedData = [];\n    let objectIndex = 0;\n    for (const val of data) {\n      const text = getText(val);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {\n            text: letter,\n            index: i,\n            offsets,\n            len: text.length,\n            // reference of original object and object index\n            object: val,\n            objectIndex\n          };\n\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n\n      objectIndex++;\n    }\n\n    this.setState({data: transformedData});\n  }\n  /* eslint-enable no-loop-func */\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  _getAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      return x => accessor(x.object);\n    }\n    return accessor;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    return x => {\n      const textAnchor =\n        typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;\n      if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n        throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n      }\n      return TEXT_ANCHOR[textAnchor];\n    };\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    return x => {\n      const alignmentBaseline =\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(x.object)\n          : getAlignmentBaseline;\n      if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n        throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n      }\n      return ALIGNMENT_BASELINE[alignmentBaseline];\n    };\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      sdf,\n      sizeScale,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n\n        getPosition: d => getPosition(d.object),\n        getColor: this._getAccessor(getColor),\n        getSize: this._getAccessor(getSize),\n        getAngle: this._getAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this._getAccessor(getPixelOffset),\n        fp64,\n        sizeScale: sizeScale * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n\n        getIcon: d => d.text,\n        getShiftInQueue: d => this.getLetterOffset(d),\n        getLengthOfQueue: d => this.getTextLength(d)\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}