{"version":3,"sources":["../../../src/arc-layer/arc-layer.js"],"names":["fp64LowPart","fp64","DEFAULT_COLOR","defaultProps","getSourcePosition","type","value","x","sourcePosition","getTargetPosition","targetPosition","getSourceColor","getTargetColor","getStrokeWidth","widthScale","min","strokeWidth","deprecatedFor","ArcLayer","use64bitProjection","vs","vs64","fs","modules","attributeManager","getAttributeManager","addInstanced","instancePositions","size","transition","accessor","update","calculateInstancePositions","instancePositions64Low","calculateInstancePositions64Low","instanceSourceColors","GL","UNSIGNED_BYTE","defaultValue","instanceTargetColors","instanceWidths","props","oldProps","changeFlags","gl","context","state","model","delete","setState","_getModel","invalidateAll","setUniforms","positions","NUM_SEGMENTS","i","concat","Model","Object","assign","getShaders","id","geometry","Geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","numSegments","attribute","data","object","isFP64","use64bitPositions","constant","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\n\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './arc-layer-vertex.glsl';\nimport vs64 from './arc-layer-vertex-64.glsl';\nimport fs from './arc-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  fp64: false,\n\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getSourceColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getTargetColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getStrokeWidth: {type: 'accessor', value: 1},\n  widthScale: {type: 'number', value: 1, min: 0},\n\n  // deprecated\n  strokeWidth: {deprecatedFor: 'getStrokeWidth'}\n};\n\nexport default class ArcLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instancePositions: {\n        size: 4,\n        transition: true,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions\n      },\n      instancePositions64Low: {\n        size: 4,\n        accessor: ['getSourcePosition', 'getTargetPosition'],\n        update: this.calculateInstancePositions64Low\n      },\n      instanceSourceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getSourceColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceTargetColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getTargetColor',\n        defaultValue: DEFAULT_COLOR\n      },\n      instanceWidths: {\n        size: 1,\n        transition: true,\n        accessor: 'getStrokeWidth',\n        defaultValue: 1\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n    // Re-generate model if geometry changed\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      this.getAttributeManager().invalidateAll();\n    }\n\n    this.state.model.setUniforms({\n      widthScale: props.widthScale\n    });\n  }\n\n  _getModel(gl) {\n    let positions = [];\n    const NUM_SEGMENTS = 50;\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    for (let i = 0; i < NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n\n    return model;\n  }\n\n  calculateInstancePositions(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = sourcePosition[0];\n      value[i + 1] = sourcePosition[1];\n      value[i + 2] = targetPosition[0];\n      value[i + 3] = targetPosition[1];\n      i += size;\n    }\n  }\n\n  calculateInstancePositions64Low(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (!isFP64) {\n      attribute.value = new Float32Array(4);\n      return;\n    }\n\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    for (const object of data) {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    }\n  }\n}\n\nArcLayer.layerName = 'ArcLayer';\nArcLayer.defaultProps = defaultProps;\n"],"file":"arc-layer.js"}