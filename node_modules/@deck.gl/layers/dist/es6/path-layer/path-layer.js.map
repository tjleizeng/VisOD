{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["Layer","GL","Model","Geometry","PathTesselator","vs","vs64","fs","DEFAULT_COLOR","defaultProps","widthScale","type","min","value","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","fp64","dashJustified","getPath","object","path","getColor","getWidth","getDashArray","ATTRIBUTE_TRANSITION","enter","chunk","length","subarray","PathLayer","getShaders","use64bitProjection","modules","initializeState","noAlloc","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","transition","accessor","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","instanceLeftDeltas","calculateLeftDeltas","instanceRightDeltas","calculateRightDeltas","instanceStrokeWidths","calculateStrokeWidths","defaultValue","instanceDashArrays","calculateDashArrays","instanceColors","UNSIGNED_BYTE","calculateColors","instancePickingColors","calculatePickingColors","setState","pathTesselator","updateState","oldProps","props","changeFlags","geometryChanged","dataChanged","updateTriggersChanged","all","state","updateGeometry","data","getGeometry","positionFormat","use64bitPositions","numInstances","instanceCount","invalidateAll","gl","context","model","delete","_getModel","draw","uniforms","render","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","TRIANGLES","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","attribute","bufferLayout","get","isFP64","constant","pickingColor","index","encodePickingColor","clearPickingColor","color","pickedPathIndex","decodePickingColor","numVertices","startInstanceIndex","pathIndex","endInstanceIndex","fill","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry} from 'luma.gl';\n\nimport PathTesselator from './path-tesselator';\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthScale: {type: 'number', min: 0, value: 1}, // stroke width in meters\n  widthMinPixels: {type: 'number', min: 0, value: 0}, //  min stroke width in pixels\n  widthMaxPixels: {type: 'number', min: 0, value: Number.MAX_SAFE_INTEGER}, // max stroke width in pixels\n  rounded: false,\n  miterLimit: {type: 'number', min: 0, value: 4},\n  fp64: false,\n  dashJustified: false,\n\n  getPath: {type: 'accessor', value: object => object.path},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getWidth: {type: 'accessor', value: 1},\n  getDashArray: {type: 'accessor', value: [0, 0]}\n};\n\nconst ATTRIBUTE_TRANSITION = {\n  enter: (value, chunk) => {\n    return chunk.length ? chunk.subarray(chunk.length - value.length) : value;\n  }\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.use64bitProjection()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const noAlloc = true;\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateStartPositions,\n        noAlloc\n      },\n      instanceEndPositions: {\n        size: 3,\n        transition: ATTRIBUTE_TRANSITION,\n        accessor: 'getPath',\n        update: this.calculateEndPositions,\n        noAlloc\n      },\n      instanceStartEndPositions64xyLow: {\n        size: 4,\n        update: this.calculateInstanceStartEndPositions64xyLow,\n        noAlloc\n      },\n      instanceLeftDeltas: {size: 3, update: this.calculateLeftDeltas, noAlloc},\n      instanceRightDeltas: {size: 3, update: this.calculateRightDeltas, noAlloc},\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateStrokeWidths,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray', update: this.calculateDashArrays},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        transition: ATTRIBUTE_TRANSITION,\n        update: this.calculateColors,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {size: 3, type: GL.UNSIGNED_BYTE, update: this.calculatePickingColors}\n    });\n    /* eslint-enable max-len */\n\n    this.setState({\n      pathTesselator: new PathTesselator({})\n    });\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const attributeManager = this.getAttributeManager();\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      props.fp64 !== oldProps.fp64 ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      this.state.pathTesselator.updateGeometry({\n        data: props.data,\n        getGeometry: props.getPath,\n        positionFormat: props.positionFormat,\n        fp64: this.use64bitPositions()\n      });\n      this.setState({\n        numInstances: this.state.pathTesselator.instanceCount\n      });\n      attributeManager.invalidateAll();\n    }\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      rounded,\n      miterLimit,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        jointType: Number(rounded),\n        alignMode: Number(dashJustified),\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  calculateStartPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('startPositions');\n  }\n\n  calculateEndPositions(attribute) {\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('endPositions');\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const isFP64 = this.use64bitPositions();\n    attribute.constant = !isFP64;\n\n    if (isFP64) {\n      attribute.value = this.state.pathTesselator.get('startEndPositions64XyLow');\n    } else {\n      attribute.value = new Float32Array(4);\n    }\n  }\n\n  calculateLeftDeltas(attribute) {\n    const {pathTesselator} = this.state;\n    attribute.value = pathTesselator.get('leftDeltas');\n  }\n\n  calculateRightDeltas(attribute) {\n    const {pathTesselator} = this.state;\n    attribute.value = pathTesselator.get('rightDeltas');\n  }\n\n  calculateStrokeWidths(attribute) {\n    const {getWidth} = this.props;\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('strokeWidths', attribute.value, getWidth);\n  }\n\n  calculateDashArrays(attribute) {\n    const {getDashArray} = this.props;\n    const {pathTesselator} = this.state;\n\n    attribute.value = pathTesselator.get('dashArrays', attribute.value, getDashArray);\n  }\n\n  calculateColors(attribute) {\n    const {getColor} = this.props;\n    const {pathTesselator} = this.state;\n\n    attribute.bufferLayout = pathTesselator.bufferLayout;\n    attribute.value = pathTesselator.get('colors', attribute.value, getColor);\n  }\n\n  // Override the default picking colors calculation\n  calculatePickingColors(attribute) {\n    const {pathTesselator} = this.state;\n    const pickingColor = [];\n    attribute.value = pathTesselator.get('pickingColors', attribute.value, index =>\n      this.encodePickingColor(index, pickingColor)\n    );\n  }\n\n  clearPickingColor(color) {\n    const pickedPathIndex = this.decodePickingColor(color);\n    const {bufferLayout} = this.state.pathTesselator;\n    const numVertices = bufferLayout[pickedPathIndex];\n\n    let startInstanceIndex = 0;\n    for (let pathIndex = 0; pathIndex < pickedPathIndex; pathIndex++) {\n      startInstanceIndex += bufferLayout[pathIndex];\n    }\n\n    const {instancePickingColors} = this.getAttributeManager().attributes;\n\n    const {value} = instancePickingColors;\n    const endInstanceIndex = startInstanceIndex + numVertices;\n    value.fill(0, startInstanceIndex * 3, endInstanceIndex * 3);\n    instancePickingColors.update({value});\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}