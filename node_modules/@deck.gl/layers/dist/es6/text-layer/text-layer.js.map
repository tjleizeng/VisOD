{"version":3,"sources":["../../../src/text-layer/text-layer.js"],"names":["CompositeLayer","log","MultiIconLayer","makeFontAtlas","DEFAULT_CHAR_SET","DEFAULT_FONT_FAMILY","DEFAULT_FONT_WEIGHT","DEFAULT_FONT_SETTINGS","TEXT_ANCHOR","start","middle","end","ALIGNMENT_BASELINE","top","center","bottom","DEFAULT_COLOR","MISSING_CHAR_WIDTH","FONT_SETTINGS_PROPS","defaultProps","fp64","sizeScale","characterSet","fontFamily","fontWeight","fontSettings","getText","type","value","x","text","getPosition","position","getColor","getSize","getAngle","getTextAnchor","getAlignmentBaseline","getPixelOffset","TextLayer","updateState","props","oldProps","changeFlags","fontChanged","updateFontAtlas","dataChanged","updateTriggersChanged","all","transformStringToLetters","gl","context","mergedFontSettings","Object","assign","scale","mapping","texture","setState","iconAtlas","iconMapping","oldFontSettings","some","prop","getPickingInfo","info","object","index","data","state","transformedData","objectIndex","val","letters","Array","from","offsets","offsetLeft","forEach","letter","i","datum","len","length","frame","width","warn","push","getLetterOffset","getTextLength","_getAccessor","accessor","getAnchorXFromTextAnchor","textAnchor","hasOwnProperty","Error","getAnchorYFromAlignmentBaseline","alignmentBaseline","renderLayers","sdf","transitions","updateTriggers","SubLayerClass","getSubLayerClass","d","getAnchorX","getAnchorY","getSubLayerProps","id","getIcon","getShiftInQueue","getLengthOfQueue","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer, log} from '@deck.gl/core';\nimport MultiIconLayer from './multi-icon-layer/multi-icon-layer';\nimport {\n  makeFontAtlas,\n  DEFAULT_CHAR_SET,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_WEIGHT,\n  DEFAULT_FONT_SETTINGS\n} from './font-atlas';\n\nconst TEXT_ANCHOR = {\n  start: 1,\n  middle: 0,\n  end: -1\n};\n\nconst ALIGNMENT_BASELINE = {\n  top: 1,\n  center: 0,\n  bottom: -1\n};\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst MISSING_CHAR_WIDTH = 32;\nconst FONT_SETTINGS_PROPS = ['fontSize', 'buffer', 'sdf', 'radius', 'cutoff'];\n\nconst defaultProps = {\n  fp64: false,\n  sizeScale: 1,\n\n  characterSet: DEFAULT_CHAR_SET,\n  fontFamily: DEFAULT_FONT_FAMILY,\n  fontWeight: DEFAULT_FONT_WEIGHT,\n  fontSettings: {},\n\n  getText: {type: 'accessor', value: x => x.text},\n  getPosition: {type: 'accessor', value: x => x.position},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR},\n  getSize: {type: 'accessor', value: 32},\n  getAngle: {type: 'accessor', value: 0},\n  getTextAnchor: {type: 'accessor', value: 'middle'},\n  getAlignmentBaseline: {type: 'accessor', value: 'center'},\n  getPixelOffset: {type: 'accessor', value: [0, 0]}\n};\n\nexport default class TextLayer extends CompositeLayer {\n  updateState({props, oldProps, changeFlags}) {\n    const fontChanged = this.fontChanged(oldProps, props);\n    if (fontChanged) {\n      this.updateFontAtlas();\n    }\n\n    if (\n      changeFlags.dataChanged ||\n      fontChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getText))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  updateFontAtlas() {\n    const {gl} = this.context;\n    const {fontSettings, fontFamily, fontWeight, characterSet} = this.props;\n\n    const mergedFontSettings = Object.assign({}, DEFAULT_FONT_SETTINGS, fontSettings, {\n      fontFamily,\n      fontWeight,\n      characterSet\n    });\n    const {scale, mapping, texture} = makeFontAtlas(gl, mergedFontSettings);\n\n    this.setState({\n      scale,\n      iconAtlas: texture,\n      iconMapping: mapping\n    });\n  }\n\n  fontChanged(oldProps, props) {\n    if (\n      oldProps.fontFamily !== props.fontFamily ||\n      oldProps.characterSet !== props.characterSet ||\n      oldProps.fontWeight !== props.fontWeight\n    ) {\n      return true;\n    }\n\n    if (oldProps.fontSettings === props.fontSettings) {\n      return false;\n    }\n\n    const oldFontSettings = oldProps.fontSettings || {};\n    const fontSettings = props.fontSettings || {};\n\n    return FONT_SETTINGS_PROPS.some(prop => oldFontSettings[prop] !== fontSettings[prop]);\n  }\n\n  getPickingInfo({info}) {\n    // because `TextLayer` assign the same pickingInfoIndex for one text label,\n    // here info.index refers the index of text label in props.data\n    return Object.assign(info, {\n      // override object with original data\n      object: info.index >= 0 ? this.props.data[info.index] : null\n    });\n  }\n\n  /* eslint-disable no-loop-func */\n  transformStringToLetters() {\n    const {data, getText} = this.props;\n    const {iconMapping} = this.state;\n\n    const transformedData = [];\n    let objectIndex = 0;\n    for (const val of data) {\n      const text = getText(val);\n      if (text) {\n        const letters = Array.from(text);\n        const offsets = [0];\n        let offsetLeft = 0;\n\n        letters.forEach((letter, i) => {\n          const datum = {\n            text: letter,\n            index: i,\n            offsets,\n            len: text.length,\n            // reference of original object and object index\n            object: val,\n            objectIndex\n          };\n\n          const frame = iconMapping[letter];\n          if (frame) {\n            offsetLeft += frame.width;\n          } else {\n            log.warn(`Missing character: ${letter}`)();\n            offsetLeft += MISSING_CHAR_WIDTH;\n          }\n          offsets.push(offsetLeft);\n          transformedData.push(datum);\n        });\n      }\n\n      objectIndex++;\n    }\n\n    this.setState({data: transformedData});\n  }\n  /* eslint-enable no-loop-func */\n\n  getLetterOffset(datum) {\n    return datum.offsets[datum.index];\n  }\n\n  getTextLength(datum) {\n    return datum.offsets[datum.offsets.length - 1];\n  }\n\n  _getAccessor(accessor) {\n    if (typeof accessor === 'function') {\n      return x => accessor(x.object);\n    }\n    return accessor;\n  }\n\n  getAnchorXFromTextAnchor(getTextAnchor) {\n    return x => {\n      const textAnchor =\n        typeof getTextAnchor === 'function' ? getTextAnchor(x.object) : getTextAnchor;\n      if (!TEXT_ANCHOR.hasOwnProperty(textAnchor)) {\n        throw new Error(`Invalid text anchor parameter: ${textAnchor}`);\n      }\n      return TEXT_ANCHOR[textAnchor];\n    };\n  }\n\n  getAnchorYFromAlignmentBaseline(getAlignmentBaseline) {\n    return x => {\n      const alignmentBaseline =\n        typeof getAlignmentBaseline === 'function'\n          ? getAlignmentBaseline(x.object)\n          : getAlignmentBaseline;\n      if (!ALIGNMENT_BASELINE.hasOwnProperty(alignmentBaseline)) {\n        throw new Error(`Invalid alignment baseline parameter: ${alignmentBaseline}`);\n      }\n      return ALIGNMENT_BASELINE[alignmentBaseline];\n    };\n  }\n\n  renderLayers() {\n    const {data, scale, iconAtlas, iconMapping} = this.state;\n\n    const {\n      getPosition,\n      getColor,\n      getSize,\n      getAngle,\n      getTextAnchor,\n      getAlignmentBaseline,\n      getPixelOffset,\n      fp64,\n      sdf,\n      sizeScale,\n      transitions,\n      updateTriggers\n    } = this.props;\n\n    const SubLayerClass = this.getSubLayerClass('characters', MultiIconLayer);\n\n    return new SubLayerClass(\n      {\n        sdf,\n        iconAtlas,\n        iconMapping,\n\n        getPosition: d => getPosition(d.object),\n        getColor: this._getAccessor(getColor),\n        getSize: this._getAccessor(getSize),\n        getAngle: this._getAccessor(getAngle),\n        getAnchorX: this.getAnchorXFromTextAnchor(getTextAnchor),\n        getAnchorY: this.getAnchorYFromAlignmentBaseline(getAlignmentBaseline),\n        getPixelOffset: this._getAccessor(getPixelOffset),\n        fp64,\n        sizeScale: sizeScale * scale,\n\n        transitions: transitions && {\n          getPosition: transitions.getPosition,\n          getAngle: transitions.getAngle,\n          getColor: transitions.getColor,\n          getSize: transitions.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset\n        }\n      },\n      this.getSubLayerProps({\n        id: 'characters',\n        updateTriggers: {\n          getPosition: updateTriggers.getPosition,\n          getAngle: updateTriggers.getAngle,\n          getColor: updateTriggers.getColor,\n          getSize: updateTriggers.getSize,\n          getPixelOffset: updateTriggers.getPixelOffset,\n          getAnchorX: updateTriggers.getTextAnchor,\n          getAnchorY: updateTriggers.getAlignmentBaseline\n        }\n      }),\n      {\n        data,\n\n        getIcon: d => d.text,\n        getShiftInQueue: d => this.getLetterOffset(d),\n        getLengthOfQueue: d => this.getTextLength(d)\n      }\n    );\n  }\n}\n\nTextLayer.layerName = 'TextLayer';\nTextLayer.defaultProps = defaultProps;\n"],"file":"text-layer.js"}